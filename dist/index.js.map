{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@silexlabs/grapesjs-filter-styles/webpack/universalModuleDefinition","webpack://@silexlabs/grapesjs-filter-styles/webpack/bootstrap","webpack://@silexlabs/grapesjs-filter-styles/webpack/runtime/define property getters","webpack://@silexlabs/grapesjs-filter-styles/webpack/runtime/hasOwnProperty shorthand","webpack://@silexlabs/grapesjs-filter-styles/webpack/runtime/make namespace object","webpack://@silexlabs/grapesjs-filter-styles/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@silexlabs/grapesjs-filter-styles\"] = factory();\n\telse\n\t\troot[\"@silexlabs/grapesjs-filter-styles\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default (editor, opts = {}) => {\n  editor.on('load', () => {\n    const options = {\n      placeholder: 'Search...',\n      appendTo: null,\n      appendBefore: null,\n      ...opts\n    }\n\n    const prefix = editor.Config.selectorManager.pStylePrefix\n    const id = `${prefix}filter-styles`\n    const container = document.createElement('div')\n    container.innerHTML = `\n      <style>\n        #${id}-btn {\n          position: absolute;\n          right: 0;\n          border: none;\n          padding: 5px;\n          margin: 5px;\n          line-height: 1;\n          border-radius: 50%;\n          width: 25px;\n          height: 25px;\n          border: 1px solid;\n          z-index: 1;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          transition: opacity .15s ease;\n          cursor: pointer;\n          opacity: .75;\n        }\n        .empty #${id}-btn {\n          cursor: initial;\n          opacity: .25;\n        }\n      </style>\n\n      <button\n        id=\"${id}-btn\"\n        class=\"gjs-field gjs-sm-properties gjs-two-color\"\n        >X</button>\n      <input id=\"${id}\" type=\"text\" class=\"gjs-field gjs-sm-properties gjs-two-color\" placeholder=\"${options.placeholder}\" />\n    `\n    const tags = editor.getContainer().querySelector(`.${prefix}clm-tags`);\n    const appendBefore = typeof options.appendBefore === 'string' ? document.querySelector(options.appendBefore) : options.appendBefore\n    const appendTo = typeof options.appendTo === 'string' ? document.querySelector(options.appendTo) : options.appendTo\n    const wrapper = appendBefore ? appendBefore.parentElement : appendTo ?? tags.parentElement.parentElement\n    wrapper.insertBefore(container, appendBefore ?? tags.parentElement.parentElement.lastElementChild)\n    const input = wrapper.querySelector(`#${id}`)\n    input.onkeyup = () => refresh(editor, input, wrapper)\n    const button = wrapper.querySelector(`#${id}-btn`)\n    button.onclick = () => {\n      input.value = ''\n      refresh(editor, input, wrapper)\n    }\n    editor.on('component:selected component:styleUpdate style:target', () => {\n      resetAll(editor)\n      setTimeout(() => refresh(editor, input, wrapper))\n    })\n  })\n}\n\n/**\n * Resets all sectors (and therefore all properties).\n * @param editor The editor.\n */\nfunction resetAll(editor) {\n  getSectors(editor)\n    .forEach(sector => {\n      resetSector(sector)\n      sector.getProperties()\n        .forEach(property => {\n          resetProperty(property)\n        })\n    })\n}\n\n/**\n * A data structure containing the sectors whose visibility is altered.\n * @type {WeakMap<WeakKey, any>}\n */\nconst changedSectors = new WeakMap()\n\n/**\n * Sets the visibility of a sector.\n * @param sector The sector to show/hide.\n * @param visible A boolean used to determine the sector's visibility.\n */\nfunction showSector(sector, visible) {\n  if(!changedSectors.has(sector)) {\n    changedSectors.set(sector, {\n      sector,\n      initial: sector.isOpen(),\n    })\n  }\n  sector.setOpen(visible)\n}\n\n/**\n * Reverts the visibility state of the sector specified as a parameter.\n * @param sector The sector to reset.\n */\nfunction resetSector(sector) {\n  const item = changedSectors.get(sector)\n  item?.sector.setOpen(item?.initial)\n  changedSectors.delete(sector)\n}\n\n/**\n * A data structure containing the properties whose visibility is altered.\n * @type {WeakMap<WeakKey, any>}\n */\nconst changedProperties = new WeakMap()\n\n/**\n * Sets the visibility of a property.\n * @param property The property to show/hide.\n * @param visible A boolean used to determine the property's visibility.\n */\nfunction showProperty(property, visible) {\n  if(!changedProperties.has(property)) {\n    changedProperties.set(property, {\n      property,\n      initial: property.get('visible'),\n    })\n  }\n  property.set('visible', visible)\n}\n\n/**\n * Reverts the visibility state of the property specified as a parameter.\n * @param property The property to reset.\n */\nfunction resetProperty(property) {\n  const item = changedProperties.get(property)\n  item?.property.set('visible', item?.initial)\n  changedProperties.delete(property)\n}\n\n/**\n * Returns currently visible sectors.\n * @param editor The editor.\n * @returns {T[]} An array containing the visible sectors.\n */\nfunction getSectors(editor) {\n  return editor.StyleManager.getSectors().toArray()\n    // Filter visible sectors\n    .filter(sector => sector.isVisible())\n}\n\n/**\n * Returns searchable properties. Used by the ``refresh()`` function to filter properties.\n * @param editor The editor.\n * @returns {{property: *, sector: *, searchable: string}[]} An array containing the searchable properties.\n */\nfunction getSearchableItems(editor) {\n  return getSectors(editor)\n    // Handles composite properties\n    .flatMap(sector => sector.getProperties().flatMap(property => (property.getType() === 'composite' ? property.properties.map(subprop => ({\n      sector,\n      property,\n      subprop,\n    })) : {\n      sector,\n      property,\n    })))\n    // Create a searchable field\n    .map(({ sector, property, subprop }) => ({\n      searchable: `\n        ${sector.get('name')}\n        ${property.get('name')}\n        ${property.get('options')?.map(option => option.id).join(', ') ?? ''}\n        ${subprop?.get('name') ?? ''}\n        ${subprop?.get('options')?.map(option => option.id).join(', ') ?? ''}\n      `,\n      sector,\n      property,\n    }))\n}\n\n/**\n * The main function of the plugin. Refreshes the properties while applying a filter on their names\n * according to a text input.\n * @param editor The editor.\n * @param input The text input.\n * @param wrapper The wrapper element.\n */\nfunction refresh(editor, input, wrapper) {\n  if (input.value) {\n    // Display\n    wrapper.classList.remove('empty')\n\n    // Get searchable items\n    const properties = getSearchableItems(editor)\n      // Keep only the matching items\n      .filter(item => item.searchable.toLowerCase().includes(input.value.toLowerCase()))\n\n    // Close and hide all sectors and properties\n    getSectors(editor)\n      .forEach(sector => {\n        showSector(sector, false)\n        sector.getProperties()\n        .forEach(property => showProperty(property, false))\n      })\n    // Show the one we are searching for\n    properties.forEach(item => {\n      showSector(item.sector, true)\n      showProperty(item.property, true)\n    })\n  } else {\n    wrapper.classList.add('empty')\n    resetAll(editor)\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","editor","opts","arguments","length","undefined","on","options","placeholder","appendTo","appendBefore","prefix","Config","selectorManager","pStylePrefix","id","container","document","createElement","innerHTML","tags","getContainer","querySelector","wrapper","parentElement","insertBefore","lastElementChild","input","onkeyup","refresh","onclick","resetAll","setTimeout","getSectors","forEach","sector","item","changedSectors","setOpen","initial","delete","resetSector","getProperties","property","changedProperties","set","resetProperty","WeakMap","showSector","visible","has","isOpen","showProperty","StyleManager","toArray","filter","isVisible","classList","remove","properties","flatMap","getType","map","subprop","_ref","searchable","option","join","getSearchableItems","toLowerCase","includes","add"],"sourceRoot":""}